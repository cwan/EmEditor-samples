// Convert text TSV to CSV

var _reEscapeTest = new RegExp('[,\r\n"]');
var _reEscapeQuote = new RegExp('"', 'g');
var _reUnescapeQuote = new RegExp('""', 'g');

var _selection = document.selection;

_selection.SelectAll();

var rows = parse(_selection.Text);

_selection.Text = format(rows);

if (confirm('View in CSV mode?')) {
	editor.ExecuteCommandByID(4459);
}

function parse(allText) {

	var i;
	var len;
	var char;
	var nextChar = null;
	var item = '';
	var rows = [];
	var columns = [];
	var inQuote = false;
	
	for (i = 0, len = allText.length; i < len; i++) {
		
		char = nextChar !== null ? nextChar : allText.charAt(i);
		nextChar = i < len - 1 ? allText.charAt(i + 1) : null;
		
		switch (char) {
			
			case '\r':
			
				if (inQuote) {
					item += char;
					
				} else {
					if (nextChar === '\n') {
						i++;
						nextChar = null;
					}
					
					columns.push(unescape(item));
					rows.push(columns);
					columns = [];
					item = '';
				}
				
				break;
			
			case '\n':
			
				if (inQuote) {
					item += char;
					
				} else {
					columns.push(item);
					rows.push(columns);
					columns = [];
					item = '';
				}
				
				break;
				
			case '\t':
			
				if (inQuote) {
					item += char;
					
				} else {
					columns.push(unescape(item));
					item = '';
				}
				
				break;
			
			case '"':
				
				if (inQuote) {
					
					if (nextChar === '"') {
						item += '""';
						i++;
						nextChar = null;
					} else {
						item += '"';
						inQuote = false;
					}
				
				} else {
					
					item += char;
					inQuote = true;
				}
					
				break;
			
			default:
				item += char;
		}
	}
	
	if (item) {
		columns.push(unescape(item));
	}
	
	if (columns.length > 0) {
		rows.push(columns);
	}
	
	return rows;
}

function format(rows) {
	
	var i, j, rowLen, colLen, columns;
	var lineSeparator = document.GetLine(1, true).match(/.*?(\r?\n?)$/)[1];
	var buf = "";
	
	for (i = 0, rowLen = rows.length; i < rowLen; i++) {
		
		columns = rows[i];
		
		for (j = 0, colLen = columns.length; j < colLen; j++) {
			
			buf += escape(columns[j]);
			
			if (j < colLen - 1) {
				buf += ',';
			}
		}
		
		if (i < rowLen - 1) {
			buf += lineSeparator;
		}
	}
	
	return buf;
}

function unescape(item) {
	
	if (item.length > 0 && item.charAt(0) === '"') {
		item = item.substr(1);
	}
	
	if (item.length > 0 && item.charAt(item.length - 1) === '"') {
		item = item.substr(0, item.length - 1);
	}
	
	return item.replace(_reUnescapeQuote, '"');
}

function escape(item) {
	
	if (_reEscapeTest.test(item)) {
		return '"' + item.replace(_reEscapeQuote, '""') + '"';
		
	} else {
		return item;
	}
}
